---
title: "Somaticseq Analysis"
author:
  name: Jineta Banerjee
  affiliation: Sage Bionetworks
date: "`r format(Sys.time(), '%d %B, %Y')`"
output:
  pdf_document:
    toc: yes
    number_sections: yes
    df_print: paged
editor_options: 
  markdown: 
    wrap: 72
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r lib_synapser, echo=FALSE, eval=TRUE, results='hide', message=FALSE, warning=FALSE, include=FALSE}

#library(synapser)
#library(synapserutils)

library(BiocManager)
library(gProfileR)
#library(GOsummaries)
library(tidyverse)
library(DT)
library(vcfR)  ##read vcf files
library(maftools)
#library(GenVisR)
library(magicfor)  ## store data from forloop as dataframe
library(magrittr)
#library(shiny)
library(glue)
library(DT)
library(readxl)

library(reticulate)

```

```{python login_to_synapse, eval=FALSE, echo=FALSE, results='hide', message=FALSE, warning=FALSE, include=FALSE}

## The login credentials have been stored in .synapseConfig file in the home dir. If you dont have this setup, please make the file before trying to login.
import synapseclient
syn = synapseclient.Synapse()

syn.login()

```

## Introduction

Approximately 50% of people with NF1 develop plexiform neurofibromas
(PN), and approximately 10% of patients with PN develop malignant
peripheral nerve sheath tumors (MPNSTs) with a low 5-year survival rate
of 30-50%. Recent studies suggest that many PNs transform into atypical
neurofibromas, which in turn can develop into MPNST. The mechanisms
underlying such tumor progression are poorly understood, limiting
therapeutic options for both PNs and MPNSTs. While selumetinib (FDA
approved) and cabozantinib (in clinical trials) are possible treatment
options for a subset of PNs, once progressed to MPNSTs, there are no
pharmacologic therapeutic options available to the patients beyond
traditional chemotherapies. Identifying genetic indicators of PN to
MPNST progression may help improve tumor treatment and identify new
therapeutic avenues.


## Methods:

### Somatic Variant Calling

Raw fastq data files were quality checked using FastQC v0.11.9 and a
report was generated using MultiQC v1.8. Fastq files were aligned to
GRCh38 using BWA 0.7.17-r1188. Duplicates were marked using GATK
MarkDuplicates, and bases recalibrated using GATK BaseRecalibrator and
GATK ApplyBQSR (GATK v4.3.0.0). Somatic single nucleotide variants were
then called using Strelka2 software (Strelka v2.9.10). Strelka 2 was
shown to have high precision and recall for single nucleotide variants
compared to others as tested in the precisionFDA challenge
([Ref](https://www.nature.com/articles/s41598-020-60559-5#:~:text=In%20addition%2C%20our%20study%20revealed,frequency%20was%20lower%20than%2010%25.)).
The variants were annotated using Variant Effect Predictor (VEP v99.2)
and converted to MAF files using vcf2maf (vcf2maf v1.6.21). All of these
steps were completed on Nextflow Tower running the standardized nf-core
pipeline [sarek v3.1.2](https://nf-co.re/sarek/3.1.2).

#### Variant calling from samples with paired normal in a separate batch

The samples contained in syn52799095 and Supplementary_table_1.csv were special cases where the
tumor samples and the paire-normal samples were sequenced in two
different batches with different sequencing library kits (and thus had
two different BED files for target capture).

| status| Batch| Same BED file as the normal sample? | individualID| sample|
|----|----|----|----|----| 
|Normal| JH_batch1| -| JH-2-009|JH-2-009-871FH-A| 
|----|----|----|----|----| 
|Tumor|JH_batch1| Y| JH-2-009| JH-2-009-2578C-A|
|----|----|----|----|----| 
|Tumor|WU_PDX_batch2| N| JH-2-009| JH-2-009-HH11A-A| 
|----|----|----|----|----| 
|Tumor| WU_PDX_batch2| N| JH-2-009| JH-2-009-HH11A-A|
|----|----|----|----|----| 
|Tumor| WU_PDX_batch2| N| JH-2-009|JH-2-009-HH11A-A| 
|----|----|----|----|----| 
|Tumor| WU_PDX_batch2| N|JH-2-009| JH-2-009-HH11A-A|
|----|----|----|----|----| 
|Tumor|WU_batch1| N|JH-2-009| JH-2-009-BBGBH-A| 
|----|----|----|----|----|
|Tumor|WU_PDX_batch1| N| JH-2-031| JH-2-031-BFF3F-A|
|----|----|----|----|----| 
|Tumor| WU_PDX_batch1| N| JH-2-031| JH-2-031-BFF3F-A| 
|----|----|----|----|----| 
| Normal| JH_batch| -| JH-2-031|JH-2-031-C91BG-A|

For the above samples, first the BED file from JH_batch1 was lifted over from hg19 to hg38 coordinates using the UCSC liftOver tool and the liftover chain file named `hg19ToHg38.over.chain` and then sorted using the sort function from bedtools suite. Then a common regions bed file was generated using the intersect function in bedtools suite with at least 50% overlap in intervals between the BED file from JH_batch1 and WU_batch1. The common region bed file (syn52594249) was then used to call somatic variants from these tumor-normal pairs using the sarek v3.2.2 pipeline and Strelka2 and Mutect2 variant callers. 

### Consensus variant calling using Somaticseq
To avoid detection of false positive variant calls in the samples, we identified and reported the variant calls that had consensus between Strelka2 and Mutect2 callers. To identify these consensus calls we used a previously benchmarked method called Somaticseq (https://genomebiology.biomedcentral.com/articles/10.1186/s13059-015-0758-2). Once consensus calls for SNV and INdels were identified, the respective VCFs were then annotated using VCF2MAF in the sarek v3.2.2 pipeline to generate a merged MAF file that was used for further analysis. The consensus variants were filtered for high confidence calls (PASS filtered) with population allele frequency below 0.05 to identify robust variant calls excluding common variants.


## Results:

### Sample Summary

```{python}
import os

wd = os.getcwd()
datapath = os.path.abspath(os.path.join(wd, '../../data/'))

#clinical data
#syn.get("syn52798607", downloadLocation = datapath)

#Somaticseq Merged MAF file
#syn.get("syn52794957", downloadLocation = datapath)

#Strelka merged MAF
#syn.get("syn52874656", downloadLocation = datapath)

#Mutect2 merged MAF
#syn.get("syn52874657", downloadLocation = datapath)
```

```{r clindata, eval=TRUE, echo=FALSE, results='hide', message=FALSE, warning=FALSE, fig.height=10, fig.width=10}

newpath = py$datapath
# READ IN OFFLINE SAMPLESHEET

jhu_clinicaldata_1 <- readxl::read_xlsx(glue::glue(newpath,"/Biobank-samples-map-clinical-102523.xlsx")) %>% 
  dplyr::filter(assay == "Whole Exome Sequencing") %>%  #select WES samples
  dplyr::filter(batch != "WU_batch3") %>%  # select only batch1, 2, 3 samples
  dplyr::filter(tissue == "primary tumor") %>%  # select only tumor samples
  dplyr::mutate(Aliquot_ID_Synapse_NEW = replace_na(Aliquot_ID_Synapse_NEW, "A")) %>% 
  dplyr::mutate(Tumor_Sample_Barcode = stringr::str_c(SpecimenID_Synapse_NEW, "-", Aliquot_ID_Synapse_NEW)) %>% 
  dplyr::mutate(
    # Create categories
    age_group = dplyr::case_when(
      age <= 10            ~ "0-10",
      age > 10 & age <= 20 ~ "11-20",
      age > 20 & age <= 30 ~ "21-30",
      age > 30 & age <= 40 ~ "31-40",
      age > 40 & age <= 50 ~ "41-50",
      age > 50             ~ "> 50"
    ),
    # Convert to factor
    age_group = factor(
      age_group,
      level = c("0-10", "11-20","21-30", "31-40", "41-50", "> 50")
    )
  ) %>% 
  dplyr::select(tumorType, sex, age_group, location, tissue, individualID, Tumor_Sample_Barcode, NF1_loss_clinical_sequencing, NF1_loss_clinical_diagnosis) %>% 
  dplyr::filter(!(Tumor_Sample_Barcode %in% c("JH-2-015-6AD96-A", "JH-2-106-B73E8-A", "JH-2-106-1447G-A", "JH-2-084-F9A84-A", "JH-2-084-AE169-A"))) %>% #remove 2-015TD, JH-2-106, JH-2-084 
  purrr::set_names(nm = c(
    "tumorType", 
    "sex", 
    "age_group", 
    "location", 
    "tissue", 
    "individualID", 
    "Tumor_Sample_Barcode", 
    "NF1_clinical_sequencing", 
    "NF1_clinical_diagnosis"
  ))

```


```{r get-data, eval=TRUE, echo=FALSE, results='hide', message=FALSE, warning=FALSE, fig.height=10, fig.width=10}


mutect_snv_indel <- maftools::read.maf(glue::glue(newpath,"/syn4939902-Somatic-Mutect2.merged.maf"),
                                       clinicalData = jhu_clinicaldata_1,
                                       rmFlags = TRUE)

somatic_snv <- maftools::read.maf(glue::glue(newpath,"/syn4939902-Somatic-Somaticseq.merged.maf"),
                                       clinicalData = jhu_clinicaldata_1,
                                       rmFlags = TRUE)

strelka_snv_indel <- maftools::read.maf(glue::glue(newpath,"/syn4939902-Somatic-Strelka2.merged.maf"),
                                       clinicalData = jhu_clinicaldata_1,
                                       rmFlags = TRUE)

library(tibble)
library(dplyr)
library(purrr)
# Put all data frames in a list
mutect2 <- data.frame(tsb = c(mutect_snv_indel@data$Tumor_Sample_Barcode %>% unique()) )
strelka <- data.frame(tsb = c(strelka_snv_indel@data$Tumor_Sample_Barcode %>% unique()))
somatic <- data.frame(tsb = c(somatic_snv@data$Tumor_Sample_Barcode %>% unique()))

df_list <- list(mutect2, strelka, somatic)

#select common samples
TSB_of_interest <- reduce(df_list, inner_join)
jhu_clinicaldata_2 <- jhu_clinicaldata_1 %>% 
  dplyr::filter(jhu_clinicaldata_1$Tumor_Sample_Barcode %in% TSB_of_interest$tsb) %>% 
  dplyr::arrange(desc(tumorType))

mutect_subset <- maftools::subsetMaf(mutect_snv_indel, tsb = TSB_of_interest$tsb)
strelka_subset <- maftools::subsetMaf(strelka_snv_indel, tsb = TSB_of_interest$tsb)
somatic_subset <- maftools::subsetMaf(somatic_snv, tsb = TSB_of_interest$tsb)
```

```{r samples, eval=TRUE, echo=FALSE, results='as-is', message=FALSE, warning=FALSE, fig.height=10, fig.width=10}

#DT::datatable(jhu_clinicaldata_1[, c("individualID", "tumorType")] %>%  arrange(individualID) %>% drop_na())

# print clinical data
jhu_clinicaldata_2[, c("individualID", "tumorType")] %>% 
    group_by(as.factor(tumorType)) %>% 
    count() %>% 
    arrange(-n) %>% 
  knitr::kable() 

```

```{r colors, echo=FALSE, eval=FALSE, results='hide', message=FALSE, warning=FALSE}

tumortype_colors <- c("#0D3B66", "#2d728f","#ab3428","#61C9A8","#7E52A0", "#F4D35E","#f49e4c")
names(tumortype_colors) <- jhu_clinicaldata_1$tumorType %>% unique()

sex_colors <- c("#C49991", "#279AF1")
names(sex_colors) <- jhu_clinicaldata_1$sex %>% unique()

age_colors <- c("#F7F7FF","#caf0f8", "#48cae4", "#0077b6", "#023e8a", "#03045e")
names(age_colors) <- jhu_clinicaldata_1$age_group %>% unique()

nf1_genetic_testing <- c("#f6e7cb", "#38b000")
names(nf1_genetic_testing) <- jhu_clinicaldata_1$NF1_clinical_sequencing %>% unique()

nf1_diagnosis <- c("#99e2b4", "#dde7c7")
names(nf1_diagnosis) <- jhu_clinicaldata_1$NF1_clinical_diagnosis %>% unique()

annotation_colors <- list(tumorType = tumortype_colors, sex = sex_colors, age_group = age_colors, NF1_clinical_sequencing = nf1_genetic_testing, NF1_clinical_diagnosis = nf1_diagnosis)

```

```{r gene-list, eval=TRUE, echo=FALSE, results='hide', message=FALSE, warning=FALSE, fig.height=10, fig.width=10}

gene_list <- c("NF1",
"NF2",
"TP53",
"CDKN2A",
"EED",
"SUZ12",
"CHD4",
"EZH2",
"EPC1",
"ASTE1",
"DAXX",
"ATRX",
"PCLO",
"SPRED1",
"TYK2",
"BRAF",
"ERBB1",
"ERBB4",
"LRP1B",
"MSH3",
"MLL2",
"MLL3",
"KDM2B",
"TSC2",
"PBRM1",
"FLCN",
"CSF1R",
"ATR",
"PTPN11",
"KDR",
"MET",
"PIK3CA",
"KIT",
"PDGFRA",
"FGFR1",
"RASSF9",
"TGFB1",
"GNAS",
"EPHB6",
"ATM",
"PMS2",
"STK11",
"IGF1R",
"RBBP7",
"AEBP2",
"RB1", 
"CHEK2",
"PTEN",
"NCOR2",
"MDM2",
"ROS1",
"SMARCA4",
"MSH6",
"BRIP1",
"FANCA",
"MYC",
"NOTCH4",
"APC",
"FLT1",
"NCOR1")

short_gene_list <- c("NF1",
"TP53",
"SUZ12",
"CHD4",
"EZH2",
"DAXX",
"ATRX",
"PCLO",
"BRAF",
"ERBB4",
"LRP1B",
"MSH3",
"KDM2B",
"TSC2",
"PBRM1",
"FLCN",
"PTPN11",
"MET",
"KIT",
"PDGFRA",
"FGFR1",
"RASSF9",
"ATM",
"IGF1R",
"RBBP7",
"AEBP2",
"NCOR2",
"ROS1",
"SMARCA4",
"MSH6",
"BRIP1",
"FANCA",
"MYC",
"NOTCH4",
"APC",
"FLT1",
"NCOR1")

```

### Elucidating the somatic variant landscape of the different tumor types among the biobank samples:

First we examine the consensus SNVs detected in all samples available from the
repository. Figure 1 shows that all variants that were called with high
confidence and passed the common variant filter of Strelka2 and Mutect2 contained single nucleotide variants, insertions, and deletions. They include missense, nonsense,
splice-site, frame-shift insertions, frame-shift deletions, in-frame-deletions, and translation start-site variants. The NF1 gene features as the top mutated genes in the samples provided.

```{r oncoplot-all, eval=FALSE, echo=FALSE, results='as-is', message=FALSE, warning=FALSE, fig.height=40, fig.width=40}

pdf("/biobank-release-2/experiments/figures/mafsummary_somaticseq_subset_122023.pdf", height = 20, width = 20)
maftools::plotmafSummary(maf = somatic_subset,
               rmOutlier = TRUE,
               addStat = 'median',
               dashboard = TRUE,
               titvRaw = FALSE,
               fs = 5)
dev.off()

pdf("/biobank-release-2/experiments/figures/mafsummary_strelka_subset_122023.pdf", height = 20, width = 20)
maftools::plotmafSummary(maf = strelka_subset,
               rmOutlier = TRUE,
               addStat = 'median',
               dashboard = TRUE,
               titvRaw = FALSE,
               fs = 5)
dev.off()

pdf("/biobank-release-2/experiments/figures/mafsummary_mutect2_subset_122023.pdf", height = 20, width = 20)
maftools::plotmafSummary(maf = mutect_subset,
               rmOutlier = TRUE,
               addStat = 'median',
               dashboard = TRUE,
               titvRaw = FALSE,
               fs = 5)
#dev.off()
```


 

Through various experimental approaches various genes have been
identified to be of interest to the NF1 research community. We consulted
six seminal articles ([Cortes-Ciriano et al,
2023](https://pubmed.ncbi.nlm.nih.gov/36598417/), [Pollard et al,
2020](https://pubmed.ncbi.nlm.nih.gov/32561749/), [Zhang et al,
2014](https://pubmed.ncbi.nlm.nih.gov/25305755/),[Lee et al,
2014](https://pubmed.ncbi.nlm.nih.gov/25240281/), [De Raedt et al,
2014](https://pubmed.ncbi.nlm.nih.gov/25119042/), [Sohier et al,
2017](https://pubmed.ncbi.nlm.nih.gov/28124441/)) to generate a list of
genes that are deemed to be of interest to the community. These genes
represent a collection of cellular pathways that have been linked to the
etiology and progression of various NF1 associated tumor types and are
in consideration as therapeutic targets for the tumors. Figure 1E below
shows an oncoplot of all somatic variants identified in this list of
genes of interest.

```{r oncoplot-goi, eval=FALSE, echo=FALSE, results='as-is', message=FALSE, warning=FALSE, fig.height=70, fig.width=40}


pdf("/biobank-release-2/experiments/figures/oncoplot_genesofinterest_122023_somaticseq_subset.pdf", height = 70, width = 40)
maftools::oncoplot(somatic_subset, genes = short_gene_list,
         altered = TRUE,
         removeNonMutated = FALSE,
         drawRowBar = FALSE, drawColBar = FALSE, showTumorSampleBarcodes = TRUE,
         clinicalFeatures = c("tumorType", "sex", "age_group", "NF1_clinical_sequencing"), sortByAnnotation = TRUE, sampleOrder = jhu_clinicaldata_2$Tumor_Sample_Barcode,
         annotationColor = annotation_colors,
         annotationFontSize = 5, fontSize = 5, legendFontSize = 5, anno_height = 1,
         keepGeneOrder= TRUE, cBioPortal = TRUE,
         sepwd_genes = 3.5, sepwd_samples = 3.5, #titleText = sampleID,
         titleFontSize = 1.5, bgCol = "white", borderCol = "white", fill = TRUE)
  #mtext(somatic_snv@clinical.data$Tumor_Sample_Barcode)
dev.off()

pdf("/biobank-release-2/experiments/figures/oncoplot_genesofinterest_122023_strelka2_subset.pdf", height = 70, width = 40)
maftools::oncoplot(strelka_subset, genes = short_gene_list,
         altered = TRUE,
         removeNonMutated = FALSE,
         drawRowBar = FALSE, drawColBar = FALSE, showTumorSampleBarcodes = TRUE,
         clinicalFeatures = c("tumorType", "sex", "age_group", "NF1_clinical_sequencing"), sortByAnnotation = TRUE, sampleOrder = jhu_clinicaldata_2$Tumor_Sample_Barcode,
         annotationColor = annotation_colors,
         annotationFontSize = 5, fontSize = 5, legendFontSize = 5, anno_height = 1,
         keepGeneOrder= TRUE, cBioPortal = TRUE,
         sepwd_genes = 3.5, sepwd_samples = 3.5, #titleText = sampleID,
         titleFontSize = 1.5, bgCol = "white", borderCol = "white", fill = TRUE)
  #mtext(somatic_snv@clinical.data$Tumor_Sample_Barcode)
dev.off()

pdf("/biobank-release-2/experiments/figures/oncoplot_genesofinterest_122023_Mutect2_subset.pdf", height = 70, width = 40)
maftools::oncoplot(mutect_subset, genes = short_gene_list,
         altered = TRUE,
         removeNonMutated = FALSE,
         drawRowBar = FALSE, drawColBar = FALSE, showTumorSampleBarcodes = TRUE,
         clinicalFeatures = c("tumorType", "sex", "age_group", "NF1_clinical_sequencing"), sortByAnnotation = TRUE, sampleOrder = jhu_clinicaldata_2$Tumor_Sample_Barcode,
         annotationColor = annotation_colors,
         annotationFontSize = 5, fontSize = 5, legendFontSize = 5, anno_height = 1,
         keepGeneOrder= TRUE, cBioPortal = TRUE,
         sepwd_genes = 3.5, sepwd_samples = 3.5, #titleText = sampleID,
         titleFontSize = 1.5, bgCol = "white", borderCol = "white", fill = TRUE)
  #mtext(somatic_snv@clinical.data$Tumor_Sample_Barcode)
dev.off()
```

```{r top50, eval=FALSE, echo=FALSE, results='as-is', message=FALSE, warning=FALSE, fig.height=70, fig.width=40}

#pdf("/biobank-release-2/experiments/figures/oncoplot_top50_111023_somaticseq.pdf", height = 70, width = 40)
maftools::oncoplot(somatic_snv, top = 50,
         altered = TRUE,
         removeNonMutated = FALSE,
         drawRowBar = FALSE, drawColBar = FALSE, showTumorSampleBarcodes = FALSE,
         clinicalFeatures = c("tumorType", "sex", "age_group", "NF1_clinical_sequencing", "NF1_clinical_diagnosis"), sortByAnnotation = TRUE,
         annotationColor = annotation_colors,
         annotationFontSize = 5, fontSize = 5, legendFontSize = 5, anno_height = 1,
         keepGeneOrder= TRUE, cBioPortal = TRUE,
         sepwd_genes = 3.5, sepwd_samples = 3.5, #titleText = sampleID,
         titleFontSize = 1.5, bgCol = "white", borderCol = "white", fill = TRUE)
  #mtext(somatic_snv@clinical.data$Tumor_Sample_Barcode)
#dev.off()

#pdf("/biobank-release-2/experiments/figures/oncoplot_top50_111023_strelka_snv_indel.pdf", height = 70, width = 40)
maftools::oncoplot(strelka_snv_indel, top = 50,
         altered = TRUE,
         removeNonMutated = FALSE,
         drawRowBar = FALSE, drawColBar = FALSE, showTumorSampleBarcodes = FALSE,
         clinicalFeatures = c("tumorType", "sex", "age_group", "NF1_clinical_sequencing", "NF1_clinical_diagnosis"), sortByAnnotation = TRUE,
         annotationColor = annotation_colors,
         annotationFontSize = 5, fontSize = 5, legendFontSize = 5, anno_height = 1,
         keepGeneOrder= TRUE, cBioPortal = TRUE,
         sepwd_genes = 3.5, sepwd_samples = 3.5, #titleText = sampleID,
         titleFontSize = 1.5, bgCol = "white", borderCol = "white", fill = TRUE)
  #mtext(somatic_snv@clinical.data$Tumor_Sample_Barcode)
#dev.off()

#pdf("/biobank-release-2/experiments/figures/oncoplot_top50_111023_mutect2_snv_indel.pdf", height = 70, width = 40)
maftools::oncoplot(mutect_snv_indel, top = 50,
         altered = TRUE,
         removeNonMutated = FALSE,
         drawRowBar = FALSE, drawColBar = FALSE, showTumorSampleBarcodes = FALSE,
         clinicalFeatures = c("tumorType", "sex", "age_group", "NF1_clinical_sequencing", "NF1_clinical_diagnosis"), sortByAnnotation = TRUE,
         annotationColor = annotation_colors,
         annotationFontSize = 5, fontSize = 5, legendFontSize = 5, anno_height = 1,
         keepGeneOrder= TRUE, cBioPortal = TRUE,
         sepwd_genes = 3.5, sepwd_samples = 3.5, #titleText = sampleID,
         titleFontSize = 1.5, bgCol = "white", borderCol = "white", fill = TRUE)
  #mtext(somatic_snv@clinical.data$Tumor_Sample_Barcode)
#dev.off()
```

Once again, the NF1 gene floats to the top as having variants in most
number of samples. Given that most of the samples belong to Plexiform
Neurofibroma (PNF) and MPNST tumor types, and the plexiform
neurofibromas are often likely to undergo malignant transformation to
MPNST, we dive deeper into these two tumor types in the next few
sections.

![Consensus variant calls in top 50 genes for all
samples.](experiments/figures/oncoplot_top50_102523.png){width="70%"}

We also explored the top 50 genes with variants in these samples. The above oncoplot shows the increased genomic activity in MPNST samples compared to PNF samples recapitulating the increased genomic instability in these malignant tumors compared to the benign counterparts. This genomic instability is further enhanced due to the exposure of patients to various chemotherapeutic agents which are standard of care for this tumor type.

### Somatic variants in PNF and MPNST samples:

Figure 2 shows a side-by-side comparison of the variants in genes of
interest in these two tumortypes.

```{r subset-maf, eval=TRUE, echo=FALSE, results='hide', message=FALSE, warning=FALSE, fig.height=10, fig.width=10}

mpnst_tsb <- jhu_clinicaldata_1$Tumor_Sample_Barcode[jhu_clinicaldata_1$tumorType == "Malignant Peripheral Nerve Sheath Tumor"]

pnf_tsb <- jhu_clinicaldata_1$Tumor_Sample_Barcode[jhu_clinicaldata_1$tumorType == "Plexiform Neurofibroma"]

mpnst_maf <- maftools::subsetMaf(maf = somatic_subset, 
                                 tsb = mpnst_tsb)

pnf_maf <- maftools::subsetMaf(maf = somatic_subset, 
                                 tsb = pnf_tsb)
```

We note that 30% of PNF samples and 27% of MPNST samples show the
presence of somatic SNVs in the NF1 gene, instead of the expected 100% of samples. The incomplete detection of NF1 variants is likely due to a combination of factors: 1) detection  sensitivity of whole exome sequencing is limited by lack of coverage on intronic regions 2) WES analysis is not sensitive to microdeletion or copy number changes, 3) if there is loss of heterozygosity of NF1 gene in the tumor sample, somatic variant analysis will be unable to call a variant since both tumor and normal samples now have the same genetic variants, 4) the tumor sample may have surrounding normal sample, and if tumor purity is low variants will not be called with high confidence. These limitations suggest that targeted high depth clinical sequencing may be more sensitive in capturing variants in these tumors.

![Somatic SNVs in genes of interest specifically in PNF and MPNST
samples](experiments/figures/co-oncoplot_somaticseq_102523.png){width="90%"}

```{r co-oncoplot, eval=FALSE, echo=FALSE, results='as-is', message=FALSE, warning=FALSE, fig.height= 40, fig.width=40}

pdf("/biobank-release-2/experiments/figures/co-onplot_somaticseq_subset_122023.pdf", height = 40, width = 40)
maftools::coOncoplot(m1 = pnf_maf,
                     m2 = mpnst_maf,
                     m1Name = "Plexiform Neurofibroma",
                     m2Name = "MPNST",
                     genes = gene_list,
                     clinicalFeatures1 = c("individualID", "sex", "age_group", "NF1_loss_clinical_sequencing", "NF1_clinical_diagnosis"),
                     clinicalFeatures2 = c("individualID", "sex", "age_group", "NF1_loss_clinical_sequencing", "NF1_clinical_diagnosis"),
                     sortByAnnotation1 = TRUE,
                     sortByAnnotation2 = TRUE,
                     #annotationColor1 = annotation_colors,
                     #annotationColor2 = annotation_colors,
                     sampleOrder1 = pnf_maf@clinical.data$Tumor_Sample_Barcode,
                     sampleOrder2 = mpnst_maf@clinical.data$Tumor_Sample_Barcode,
                     annotationFontSize = 5,
                     geneNamefont = 2,
                     showSampleNames = TRUE,
                     SampleNamefont = 3,
                     keepGeneOrder = FALSE,
                     sepwd_genes1 = 10,
                     sepwd_samples1 = 20,
                     sepwd_genes2 = 10,
                     sepwd_samples2 = 20,
                     legendFontSize = 3,
                     removeNonMutated = FALSE,
                     #bgCol = "light grey", borderCol = "white"
                     )
dev.off()
```

#### Variants in NF1 gene:

We further dive in to visualize the main SNVs and their protein
consequences in the PNF and MPNST samples. Figure 4 shows a lollipop
plot that visualizes the main SNVs and the protein effect of the variant
in NF1 gene. The top half of the plot highlights position of variants
detected in different plexiform neurofibroma samples. The bottom half
highlights variants detected in MPNST samples.

 

```{r lollipop, eval=TRUE, echo=FALSE, results='as-is', message=FALSE, warning=FALSE, fig.height= 5, fig.width=20, fig.cap="Lollipop plot of NF1 gene"}

#pdf("/biobank-release-2/experiments/figures/lollipopplot2_somaticseq_110723.pdf", height = 20, width = 40)
maftools::lollipopPlot2(
  m1 = pnf_maf,
  m2 = mpnst_maf,
  m1_name = "Plexiform Neurofibroma",
  m2_name = "MPNST",
  gene = 'NF1',
  AACol1 = 'HGVSp_Short',
  AACol2 = 'HGVSp_Short',
  m1_label = 'all',
  m2_label = 'all',
  legendTxtSize = 2,
  labPosSize = 2,
  labPosAngle = 45,
  pointSize = 3,
  alpha = 0.8
)
#dev.off()
```

 

#### Oncogenic pathways in PNF and MPNST samples:

The genetic variants in the PNF and MPNST samples may cause disruption
of various oncogenic pathways. Figure 5A-B below show that RAS-RTK pathway
is affected by the variants present in PNF samples. However, in
MPNST samples, the genetic variants mostly affect the RAS-RTK and Hippo
pathways (Figure5 A-B).

![Oncogenic pathways affected in PNF and MPNST samples. Tumor suppressor
genes are in red and oncogenes are in blue
font.](experiments/figures/Figure2b.png){width="90%"}

 

```{r pathways-all, eval=TRUE, echo=FALSE, results='as-is', message=FALSE, warning=FALSE, fig.height=40, fig.width=40}

#pdf("/biobank-release-2/experiments/figures/oncogenic_pathways_110723.pdf", height = 40, width = 40)
maftools::OncogenicPathways(maf = pnf_maf, 
                  fontSize = 10)
#dev.off()
```

```{r pathways-all-2, eval=TRUE, echo=FALSE, results='as-is', message=FALSE, warning=FALSE, fig.height=40, fig.width=40}

#pdf("/biobank-release-2/experiments/figures/pnf_RAS_102523.pdf", height = 40, width = 40)
maftools::PlotOncogenicPathways(maf = pnf_maf,
                      pathways = "RTK-RAS",
                      fontSize = 2,
                      showTumorSampleBarcodes = TRUE)
#dev.off()
```

```{r pathways-all-3, eval=FALSE, echo=FALSE, results='as-is', message=FALSE, warning=FALSE, fig.height=40, fig.width=40}

#pdf("/biobank-release-2/experiments/figures/pnf_notch.pdf", height = 40, width = 40)
maftools::PlotOncogenicPathways(maf = pnf_maf,
                      pathways = "NOTCH",
                      fontSize = 2,
                      showTumorSampleBarcodes = TRUE)
#dev.off()
```

```{r pathways-all-4, eval=FALSE, echo=FALSE, results='as-is', message=FALSE, warning=FALSE, fig.height=20, fig.width=20}

pdf("/biobank-release-2/experiments/figures/oncogenic_pathways_mnpst_110725.pdf", height = 40, width = 40)
maftools::OncogenicPathways(maf = mpnst_maf, 
                  fontSize = 10)
dev.off()
```

```{r pathways-all-5, eval=FALSE, echo=FALSE, results='as-is', message=FALSE, warning=FALSE, fig.height=40, fig.width=40}

#pdf("/biobank-release-2/experiments/figures/mpnst_ras_102523.pdf", height = 40, width = 40)
maftools::PlotOncogenicPathways(maf = mpnst_maf,
                      pathways = "RTK-RAS",
                      fontSize = 5,
                      showTumorSampleBarcodes = TRUE)
#dev.off()
```

```{r pathways-all-6, eval=FALSE, echo=FALSE, results='as-is', message=FALSE, warning=FALSE, fig.height=40, fig.width=40}

#pdf("/biobank-release-2/experiments/figures/mpnst_hippo_102325.pdf", height = 40, width = 40)
maftools::PlotOncogenicPathways(maf = mpnst_maf,
                      pathways = "Hippo",
                      fontSize = 5,
                      showTumorSampleBarcodes = TRUE)
#dev.off()
```

```{r pnf_cancer_driver}

maftools::oncodrive(pnf_maf)
```

```{r mpnst_cancer_driver}

maftools::oncodrive(mpnst_maf)
```
